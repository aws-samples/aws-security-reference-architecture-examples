[tool.poetry]
name = "aws_sra_examples"
version = "2.1.8"
description = "AWS Security Reference Architecture Examples"
authors = ["Amazon Web Services <no_reply@amazon.com>"]
license = "MIT-0 License"

[tool.poetry.dependencies]
python = "^3.9"
boto3 = "1.20.32"
crhelper = "^2.0.11"

[tool.poetry.dev-dependencies]
boto3-stubs = { extras = ["all"], version = "1.20.32" }
pytest = "^7.2.1"
pytest-cov = "^4.0.0"
pytest-mock = "^3.10.0"
pytest-xdist = "^3.1.0"
black = "^22.12.0"
isort = "^5.11.4"
rope = "^1.7.0"
mypy = "^0.991"
flake8 = "5.0.4"                                        # Leaving at 5.0.4 until full dependency support (e.g. flake8-eradicate, flake8-broken-line, dlint)
darglint = "^1.8.1"
dlint = "^0.13.0"
flake8-2020 = "^1.7.0"
flake8-SQL = "^0.4.1"
flake8-annotations-complexity = "^0.0.7"
flake8-bandit = "^4.1.1"
flake8-breakpoint = "^1.1.0"
flake8-broken-line = "^0.6.0"
flake8-bugbear = "^23.1.17"
flake8-builtins = "^2.1.0"
flake8-cognitive-complexity = "^0.1.0"
flake8-comprehensions = "^3.10.1"
flake8-docstrings = "^1.6.0"
flake8-eradicate = "^1.4.0"
flake8-executable = "^2.1.2"
flake8-expression-complexity = "^0.0.11"
flake8-fixme = "^1.1.1"
flake8-functions = "^0.0.7"
flake8-markdown = "^0.4.0"
flake8-mutable = "^1.2.0"
flake8-no-implicit-concat = "^0.3.4"
flake8-print = "^5.0.0"
flake8-printf-formatting = "^1.1.2"
flake8-pytest-style = "^1.6.0"
flake8-raise = "^0.0.5"
flake8-return = "^1.2.0"
flake8-scrapy = "^0.0.1"
flake8-simplify = "^0.19.3"
flake8-todos = "^0.2.1"
flake8-tuple = "^0.4.1"
flake8-typing-imports = "^1.14.0"
flake8-unused-arguments = "^0.0.12"
flake8-use-fstring = "^1.4"
flake8-use-pathlib = "^0.3.0"
flake8-variables-names = "^0.0.5"
pep8-naming = "^0.13.3"
aws-lambda-typing = "^2.16.3"
safety = "^2.3.5"
pylic = "^3.4.0"


[tool.black]
line-length = 150

[tool.isort]
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 150

[tool.mypy]
ignore_missing_imports = true
show_error_codes = true
warn_unused_configs = true
warn_unused_ignores = true
warn_no_return = true
check_untyped_defs = true
warn_redundant_casts = true
strict_equality = true
show_column_numbers = true
show_error_context = true
disallow_untyped_calls = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
explicit_package_bases = true
namespace_packages = true
no_implicit_optional = false

[tool.coverage.report]
exclude_lines = ["pragma: no cover"]
show_missing = true

[tool.coverage.run]
branch = true
omit = ["tests/*"]
source = ["."]

[tool.pytest.ini_options]
addopts = [
    #  "--cov=./",
    "--cov-report=xml",
    "--cov-report=term",
    "--durations=5",
    "--numprocesses=auto",
    "-rA",
    "--ignore-glob=old/*",
]
python_files = ["test_*.py"]
xfail_strict = true

[tool.pyright]
stubPath = "./typings"
exclude = ["**/node_modules", "**/__pycache__"]
pythonVersion = "3.9"
typeCheckingMode = "basic"
useLibraryCodeForTypes = true
reportGeneralTypeIssues = "none"
reportTypedDictNotRequiredAccess = "none"

[tool.pylic]
safe_licenses = ["MIT License", "BSD License", "Apache Software License"]

[tool.vulture]
ignore_decorators = ["@helper.*"]
ignore_names = ["lambda_handler"]
min_confidence = 60
paths = ["aws_sra_examples"]
sort_by_size = true
verbose = false

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
