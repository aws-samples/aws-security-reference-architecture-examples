########################################################################
# Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
# SPDX-License-Identifier: MIT-0
########################################################################
AWSTemplateFormatVersion: '2010-09-09'
Description:
  Creates the SRA staging S3 bucket to store solution Lambda source code, CloudFormation templates, and other deployment files. -
  'common_prerequisites' solution in the repo, https://github.com/aws-samples/aws-security-reference-architecture-examples (sra-1ssgnse2h)
Metadata:
  SRA:
    Version: 1.0
    Order: 3
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: General Properties
        Parameters:
          - pSRASolutionTagKey
          - pSRASolutionName
          - pSRAStagingS3BucketNamePrefix
          - pAWSControlTowerExecutionRoleName
          - pOrganizationId
      - Label:
          default: AWS Organization ID - Lambda Function Properties
        Parameters:
          - pOrgIdLambdaRoleName
          - pOrgIdLambdaFunctionName
      - Label:
          default: General Lambda Function Properties
        Parameters:
          - pCreateLambdaLogGroup
          - pLambdaLogGroupRetention
          - pLambdaLogGroupKmsKey
          - pLambdaLogLevel
    ParameterLabels:
      pAWSControlTowerExecutionRoleName:
        default: Control Tower Execution Role Name
      pCreateLambdaLogGroup:
        default: Create Lambda Log Group
      pLambdaLogGroupKmsKey:
        default: (Optional) Lambda Logs KMS Key
      pLambdaLogGroupRetention:
        default: Lambda Log Group Retention
      pLambdaLogLevel:
        default: Lambda Log Level
      pOrgIdLambdaFunctionName:
        default: AWS Organization ID - Lambda Function Name
      pOrgIdLambdaRoleName:
        default: AWS Organization ID - Lambda Role Name
      pOrganizationId:
        default: (Optional) AWS Organization ID
      pSRASolutionName:
        default: SRA Solution Name
      pSRASolutionTagKey:
        default: SRA Solution Tag Key
      pSRAStagingS3BucketNamePrefix:
        default: SRA Staging S3 Bucket Name Prefix

Parameters:
  pAWSControlTowerExecutionRoleName:
    AllowedValues: [AWSControlTowerExecution]
    Default: AWSControlTowerExecution
    Description: The AWS Control Tower Execution IAM Role used to deploy resources within accounts
    Type: String
  pCreateLambdaLogGroup:
    AllowedValues: ['true', 'false']
    Default: 'false'
    Description:
      Indicates whether a CloudWatch Log Group should be explicitly created for the Lambda function, to allow for setting a Log Retention and/or KMS
      Key for encryption.
    Type: String
  pLambdaLogGroupKmsKey:
    AllowedPattern: '^$|^arn:(aws[a-zA-Z-]*){1}:kms:[a-z0-9-]+:\d{12}:key\/[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$'
    ConstraintDescription: 'Key ARN example:  arn:aws:kms:us-east-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab'
    Default: ''
    Description:
      (Optional) KMS Key ARN to use for encrypting the Lambda logs data. If empty, encryption is enabled with CloudWatch Logs managing the server-side
      encryption keys.
    Type: String
  pLambdaLogGroupRetention:
    AllowedValues: [1, 3, 5, 7, 14, 30, 60, 90, 120, 150, 180, 365, 400, 545, 731, 1827, 3653]
    Default: 14
    Description: Specifies the number of days you want to retain log events
    Type: String
  pLambdaLogLevel:
    AllowedValues: [INFO, ERROR, DEBUG]
    Default: INFO
    Description: Lambda Function Logging Level
    Type: String
  pOrgIdLambdaFunctionName:
    AllowedPattern: '^[\w-]{1,64}$'
    ConstraintDescription: Max 64 alphanumeric characters. Also special characters supported [_, -]
    Default: sra-org-id
    Description: Lambda function name for getting the AWS Organization ID
    Type: String
  pOrgIdLambdaRoleName:
    AllowedPattern: '^[\w+=,.@-]{1,64}$'
    ConstraintDescription: Max 64 alphanumeric characters. Also special characters supported [+, =, ., @, -].
    Default: sra-org-id-lambda
    Description: Lambda execution role for getting the AWS Organization ID
    Type: String
  pOrganizationId:
    AllowedPattern: '^$|^o-[a-z0-9]{10,32}$'
    ConstraintDescription: Must start with 'o-' followed by from 10 to 32 lowercase letters or digits. (e.g. o-abc1234567)
    Default: ''
    Description: (Optional) AWS Organizations ID. If empty, custom resource will be deployed to determine the AWS Organization ID.
    Type: String
  pSRASolutionName:
    AllowedValues: [sra-common-prerequisites]
    Default: sra-common-prerequisites
    Description: The SRA solution name. The default value is the folder name of the solution
    Type: String
  pSRASolutionTagKey:
    AllowedValues: [sra-solution]
    Default: sra-solution
    Description: The SRA solution tag key applied to all resources created by the solution that support tagging. The value is the pSRASolutionName.
    Type: String
  pSRAStagingS3BucketNamePrefix:
    AllowedValues: [sra-staging]
    Default: sra-staging
    Description:
      SRA Staging S3 bucket name prefix for the SRA artifacts relevant to the solutions. (e.g., lambda zips, CloudFormation templates). The account
      and region are added to the prefix <bucket-name-prefix>-<account-id>-<region>. Example = sra-staging-123456789012-us-east-1.
    Type: String

Conditions:
  cCreateCustomResource: !Equals [!Ref pOrganizationId, '']
  cCreateLambdaLogGroup: !Equals [!Ref pCreateLambdaLogGroup, 'true']
  cCreateLambdaLogGroupAndCreateCustomResource: !And
    - !Condition cCreateCustomResource
    - !Condition cCreateLambdaLogGroup
  cUsingKmsKey: !Not [!Equals [!Ref pLambdaLogGroupKmsKey, '']]
  cUseGraviton: !Or
    - !Equals [!Ref 'AWS::Region', ap-northeast-1]
    - !Equals [!Ref 'AWS::Region', ap-south-1]
    - !Equals [!Ref 'AWS::Region', ap-southeast-1]
    - !Equals [!Ref 'AWS::Region', ap-southeast-2]
    - !Equals [!Ref 'AWS::Region', eu-central-1]
    - !Equals [!Ref 'AWS::Region', eu-west-1]
    - !Equals [!Ref 'AWS::Region', eu-west-2]
    - !Equals [!Ref 'AWS::Region', us-east-1]
    - !Equals [!Ref 'AWS::Region', us-east-2]
    - !Equals [!Ref 'AWS::Region', us-west-2]

Resources:
  rOrgIdLambdaCustomResource:
    Condition: cCreateCustomResource
    Type: Custom::LambdaCustomResource
    Version: '1.0'
    Properties:
      ServiceToken: !GetAtt rOrgIdLambdaFunction.Arn

  rOrgIdLambdaFunction:
    Condition: cCreateCustomResource
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: W58
            reason: Lambda role provides access to CloudWatch Logs
          - id: W89
            reason: Lambda does not need to communicate with VPC resources.
          - id: W92
            reason: Lambda does not need reserved concurrent executions.
      checkov:
        skip:
          - id: CKV_AWS_115
            comment: Lambda does not need reserved concurrent executions.
          - id: CKV_AWS_116
            comment: DLQ not needed, as Lambda function only triggered by CloudFormation events.
          - id: CKV_AWS_117
            comment: Lambda does not need to communicate with VPC resources.
          - id: CKV_AWS_173
            comment: Environment variables are not sensitive.
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Ref pOrgIdLambdaFunctionName
      Description: Get AWS Organization ID
      Architectures: !If
        - cUseGraviton
        - [arm64]
        - !Ref AWS::NoValue
      Handler: index.lambda_handler
      Role: !GetAtt rOrgIdLambdaRole.Arn
      Runtime: python3.9
      Timeout: 60
      Environment:
        Variables:
          LOG_LEVEL: !Ref pLambdaLogLevel
      Tags:
        - Key: !Ref pSRASolutionTagKey
          Value: !Ref pSRASolutionName
      Code:
        ZipFile: |
          # type: ignore
          """Custom Resource to get AWS Organization ID.

          Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
          SPDX-License-Identifier: MIT-0
          """
          import logging
          import os

          import boto3
          import cfnresponse

          LOGGER = logging.getLogger(__name__)
          log_level: str = os.environ.get("LOG_LEVEL", "ERROR")
          LOGGER.setLevel(log_level)


          def get_org_id():
              """Get AWS Organization ID.

              Returns:
                  Response data for custom resource
              """
              management_account_session = boto3.Session()
              org_client = management_account_session.client("organizations")
              response = org_client.describe_organization()["Organization"]
              LOGGER.debug({"API_Call": "organizations:DescribeOrganization", "API_Response": response})
              return {"OrganizationId": response["Id"]}


          def lambda_handler(event, context):
              """Lambda Handler.

              Args:
                  event: event data
                  context: runtime information
              """
              try:
                  data = get_org_id()
                  cfnresponse.send(event, context, cfnresponse.SUCCESS, data, data["OrganizationId"])
              except Exception:
                  LOGGER.exception("Unexpected!")
                  reason = f"See the details in CloudWatch Log Stream: '{context.log_group_name}'"
                  cfnresponse.send(event, context, cfnresponse.FAILED, {}, data["OrganizationId"], reason=reason)

  rOrgIdLambdaLogGroup:
    Condition: cCreateLambdaLogGroupAndCreateCustomResource
    DeletionPolicy: Retain
    Type: AWS::Logs::LogGroup
    UpdateReplacePolicy: Retain
    Properties:
      LogGroupName: !Sub /aws/lambda/${pOrgIdLambdaFunctionName}
      KmsKeyId: !If
        - cUsingKmsKey
        - !Ref pLambdaLogGroupKmsKey
        - !Ref AWS::NoValue
      RetentionInDays: !Ref pLambdaLogGroupRetention

  rOrgIdLambdaRole:
    Condition: cCreateCustomResource
    Type: AWS::IAM::Role
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: W11
            reason: Allow * in resource when required
          - id: W28
            reason: The role name is defined to identify automation resources
    Properties:
      RoleName: !Ref pOrgIdLambdaRoleName
      Description: !Sub Role for '${pOrgIdLambdaRoleName}' Lambda function
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action: sts:AssumeRole
            Principal:
              Service:
                - lambda.amazonaws.com
      Tags:
        - Key: !Ref pSRASolutionTagKey
          Value: !Ref pSRASolutionName
      Policies:
        - PolicyName: org-id
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Sid: OrganizationRead
                Effect: Allow
                Action: organizations:DescribeOrganization
                Resource: '*'
        - PolicyName: CloudWatchLogGroup
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Sid: CloudWatchLogs
                Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: !Sub arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/${pOrgIdLambdaFunctionName}:log-stream:*

  rSRAStagingS3Bucket:
    Type: AWS::S3::Bucket
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: W35
            reason: S3 access logs intentionally not enabled
      checkov:
        skip:
          - id: CKV_AWS_18
            comment: S3 access logs intentionally not enabled
    Properties:
      BucketName: !Sub ${pSRAStagingS3BucketNamePrefix}-${AWS::AccountId}-${AWS::Region}
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      OwnershipControls:
        Rules:
          - ObjectOwnership: BucketOwnerPreferred
      PublicAccessBlockConfiguration:
        BlockPublicAcls: True
        BlockPublicPolicy: True
        IgnorePublicAcls: True
        RestrictPublicBuckets: True
      Tags:
        - Key: !Ref pSRASolutionTagKey
          Value: !Ref pSRASolutionName
      VersioningConfiguration:
        Status: Enabled

  rSRAStagingS3BucketPolicy:
    Type: AWS::S3::BucketPolicy
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: F16
            reason: GetObject is restricted to AWS accounts within the AWS Organization
    Properties:
      Bucket: !Ref rSRAStagingS3Bucket
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: AllowDeploymentRoleGetObject
            Effect: Allow
            Action: s3:GetObject
            Principal: '*'
            Resource: !Sub arn:${AWS::Partition}:s3:::${rSRAStagingS3Bucket}/*
            Condition:
              ArnLike:
                aws:PrincipalArn:
                  - !Sub arn:${AWS::Partition}:iam::*:role/${pAWSControlTowerExecutionRoleName}
                  - !Sub arn:${AWS::Partition}:iam::*:role/stacksets-exec-*
                  - !Sub arn:${AWS::Partition}:iam::*:role/sra-execution

          - Sid: DenyExternalPrincipals
            Effect: Deny
            Action: 's3:*'
            Principal: '*'
            Resource:
              - !Sub arn:${AWS::Partition}:s3:::${rSRAStagingS3Bucket}
              - !Sub arn:${AWS::Partition}:s3:::${rSRAStagingS3Bucket}/*
            Condition:
              StringNotEquals:
                aws:PrincipalOrgID: !If
                  - cCreateCustomResource
                  - !GetAtt rOrgIdLambdaCustomResource.OrganizationId
                  - !Ref pOrganizationId

          - Sid: SecureTransport
            Effect: Deny
            Action: 's3:*'
            Principal: '*'
            Resource:
              - !Sub arn:${AWS::Partition}:s3:::${rSRAStagingS3Bucket}
              - !Sub arn:${AWS::Partition}:s3:::${rSRAStagingS3Bucket}/*
            Condition:
              Bool:
                aws:SecureTransport: False

  rSSMParameterSRAStagingS3BucketName:
    DeletionPolicy: Retain
    UpdateReplacePolicy: Retain
    Type: AWS::SSM::Parameter
    Properties:
      Name: /sra/staging-s3-bucket-name
      Type: String
      Value: !Ref rSRAStagingS3Bucket
      Description: SRA Staging S3 Bucket Name SSM parameter
      Tags:
        sra-solution: !Ref pSRASolutionName

  rSSMParameterSRAStagingS3BucketNamePrefix:
    DeletionPolicy: Retain
    UpdateReplacePolicy: Retain
    Type: AWS::SSM::Parameter
    Properties:
      Name: /sra/staging-s3-bucket-name-prefix
      Type: String
      Value: !Ref pSRAStagingS3BucketNamePrefix
      Description: SRA Staging S3 Bucket Name Prefix SSM parameter
      Tags:
        sra-solution: !Ref pSRASolutionName

Outputs:
  oOrganizationId:
    Condition: cCreateCustomResource
    Description: Organization ID
    Value: !GetAtt rOrgIdLambdaCustomResource.OrganizationId
  oOrgIdLambdaFunctionArn:
    Condition: cCreateCustomResource
    Description: AWS Organization ID Lambda Function ARN
    Value: !GetAtt rOrgIdLambdaFunction.Arn
  oOrgIdLambdaLogGroupArn:
    Condition: cCreateLambdaLogGroupAndCreateCustomResource
    Description: AWS Organization ID Lambda Log Group ARN
    Value: !GetAtt rOrgIdLambdaLogGroup.Arn
  oOrgIdLambdaRoleArn:
    Condition: cCreateCustomResource
    Description: AWS Organization ID Lambda Role ARN
    Value: !GetAtt rOrgIdLambdaRole.Arn
  oSRAStagingS3BucketName:
    Description: SRA Staging S3 Bucket Name SSM parameter
    Value: !GetAtt rSSMParameterSRAStagingS3BucketName.Value
  oSRAStagingS3BucketNamePrefix:
    Description: SRA Staging S3 Bucket Name Prefix SSM parameter
    Value: !GetAtt rSSMParameterSRAStagingS3BucketNamePrefix.Value
