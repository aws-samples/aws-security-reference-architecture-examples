AWSTemplateFormatVersion: '2010-09-09'
Description: CloudFormation template to create a Lambda function and its execution role

Parameters:
  pSraRepoZipUrl:
    Type: String
    Default: 'https://github.com/liamschn/aws-security-reference-architecture-examples/archive/refs/heads/sra-genai.zip'
    Description: The S3 URL for the SRA solution zip file

  pDryRun:
    Type: String
    # TODO(liamschn): change the default to 'true' after done testing
    Default: 'false'
    AllowedValues:
      - 'true'
      - 'false'
    Description: Whether to run in dry run mode or not

  # TODO(liamschn): this may not scale as the max is 4096 bytes; consider multiple parameters such as one for accounts and one for regions (may even need more if we have environments with 1000 accounts); the default below is already 198 bytes
  # pRuleRegionsAccounts:
  #   Type: CommaDelimitedList
  #   Default: "{'sra-bedrock-check-iam-user-access':{'accounts':['863518454635'],'regions':['us-west-2','us-east-1']},'sra-bedrock-check-eval-job-bucket':{'accounts':['863518454635'],'regions':['us-east-1','us-west-2']}}"
  #   Description: List of regions and accounts to include in the SRA solution

  pSRAExecutionRoleName:
    Type: String
    Default: 'sra-execution'
    Description: The name of the IAM role to use for execution of the SRA solution

  pDeployLambdaLogGroup:
    Type: String
    Default: 'false'
    AllowedValues:
      - 'true'
      - 'false'
    Description: true or false; deploy lambda log group

  pLogGroupRetention:
    Type: Number
    Default: 30
    Description: The number of days to retain logs in the CloudWatch Log Group

  pLambdaLogLevel:
    Type: String
    Default: 'INFO'
    AllowedValues:
      - 'DEBUG'
      - 'INFO'
      - 'WARNING'
      - 'ERROR'
      - 'CRITICAL'
    Description: The logging level for the Lambda function

  pSRASolutionName:
    AllowedValues: ['sra-bedrock-org']
    Description: The SRA solution name. The default value is the folder name of the solution
    Type: String
    Default: 'sra-bedrock-org'

  pSraSolutionVersion:
    Type: String
    Default: '1.0.0'
    Description: The version of the SRA solution

  pSRAStagingS3BucketName:
    # AllowedPattern: '^(?=^.{3,63}$)(?!.*[.-]{2})(?!.*[--]{2})(?!^(?:(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9]?[0-9])(\.(?!$)|$)){4}$)(^(([a-z0-9]|[a-z0-9][a-z0-9\-]*[a-z0-9])\.)*([a-z0-9]|[a-z0-9][a-z0-9\-]*[a-z0-9])$)'
    ConstraintDescription:
      SRA Staging S3 bucket name can include numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-).
    Description:
      SRA Staging S3 bucket name for the artifacts relevant to solution. (e.g., lambda zips, CloudFormation templates) S3 bucket name can include
      numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-).
    # Type: String
    Type: AWS::SSM::Parameter::Value<String>
    Default: /sra/staging-s3-bucket-name

  pBedrockOrgLambdaRoleName:
    AllowedPattern: '^[\w+=,.@-]{1,64}$'
    ConstraintDescription: Max 64 alphanumeric characters. Also special characters supported [+, =, ., @, -]
    Default: sra-bedrock-org-lambda
    Description: Bedrock security control configuration Lambda role name
    Type: String
    AllowedValues: ['sra-bedrock-org-lambda']

  # pBedrockModelEvalBucket:
  #   AllowedPattern: '^(?=^.{3,63}$)(?!.*[.-]{2})(?!.*[--]{2})(?!^(?:(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9]?[0-9])(\.(?!$)|$)){4}$)(^(([a-z0-9]|[a-z0-9][a-z0-9\-]*[a-z0-9])\.)*([a-z0-9]|[a-z0-9][a-z0-9\-]*[a-z0-9])$)'
  #   ConstraintDescription:
  #     Bedrock Model Evaluation Job S3 bucket name can include numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-).
  #   Description:
  #     Bedrock Model Evaluation Job S3 bucket name.
  #   Type: String
  #   Default: 'test-mod-eval-bucket'

  # pBedrockDeployModelEvalBucketRule:
  #   Type: String
  #   Default: 'true'
  #   AllowedValues:
  #     - 'true'
  #     - 'false'
  #   Description: true or false; deploy bedrock model evaluation bucket config rule (default is true)

  # pBedrockDeployIAMUserAccessRule:
  #   Type: String
  #   Default: 'true'
  #   AllowedValues:
  #     - 'true'
  #     - 'false'
  #   Description: true or false; deploy bedrock IAM user access config rule (default is true)
  
  pBedrockModelEvalBucketRuleParams:
    Type: String
    # TODO(liamschn): update default value  of pBedrockModelEvalBucketRuleParams prior to production
    Default: '{"deploy": "true", "accounts": ["863518454635"], "regions": ["us-east-1", "us-west-2"], "input_params": {"BucketName": "test-mod-eval-bucket"}}'
    Description: Bedrock Model Evaluation Job Config Rule Parameters
    AllowedPattern: ^\{"deploy"\s*:\s*"(true|false)",\s*"accounts"\s*:\s*\[((?:"[0-9]+"(?:\s*,\s*)?)*)\],\s*"regions"\s*:\s*\[((?:"[a-z0-9-]+"(?:\s*,\s*)?)*)\],\s*"input_params"\s*:\s*(\{\s*(?:"BucketName"\s*:\s*"([a-zA-Z0-9-]*)"\s*)?})\}$
    ConstraintDescription: 
      "Must be a valid JSON string containing: 'deploy' (true/false), 'accounts' (array of account numbers), 
      'regions' (array of region names), and 'input_params' object (can be empty or contain 'BucketName'). Arrays can be empty. 
      Example: {\"deploy\": \"true\", \"accounts\": [\"123456789012\"], \"regions\": [\"us-east-1\"], \"input_params\": {\"s3BucketName\": \"my-bucket\"}} or
      {\"deploy\": \"false\", \"accounts\": [], \"regions\": [], \"input_params\": {}}"

  pBedrockIAMUserAccessRuleParams:
    Type: String
    # TODO(liamschn): update default value  of pBedrockIAMUserAccessRuleParams prior to production
    Default: '{"deploy": "true", "accounts": ["863518454635"], "regions": ["us-east-1", "us-west-2"], "input_params": {}}'
    Description: Bedrock IAM User Access Config Rule Parameters
    AllowedPattern: ^\{"deploy"\s*:\s*"(true|false)",\s*"accounts"\s*:\s*\[((?:"[0-9]+"(?:\s*,\s*)?)*)\],\s*"regions"\s*:\s*\[((?:"[a-z0-9-]+"(?:\s*,\s*)?)*)\],\s*"input_params"\s*:\s*(\{\s*(?:"BucketName"\s*:\s*"([a-zA-Z0-9-]*)"\s*)?})\}$
    ConstraintDescription: 
      "Must be a valid JSON string containing: 'deploy' (true/false), 'accounts' (array of account numbers), 
      'regions' (array of region names), and 'input_params' object/dict (can be empty or contain 'BucketName'). Arrays can be empty. 
      Example: {\"deploy\": \"true\", \"accounts\": [\"123456789012\"], \"regions\": [\"us-east-1\"], \"input_params\": {}} or
      {\"deploy\": \"false\", \"accounts\": [], \"regions\": [], \"input_params\": {}}"

  # pBedrockGuardrailsRuleParams:
  #   Type: String
  #   Default: '{"deploy": "true", "accounts": ["863518454635"], "regions": ["us-east-1", "us-west-2"], "input_params": {"check_safe_content": "true", "check_responsible_ai": "true", "check_data_privacy": "true", "check_content_filtering": "true", "check_token_limit": "true"}}'
  #   Description: Bedrock Guardrails Config Rule Parameters
  #   AllowedPattern: ^\{"deploy"\s*:\s*"(true|false)",\s*"accounts"\s*:\s*\[((?:"[0-9]+"(?:\s*,\s*)?)*)\],\s*"regions"\s*:\s*\[((?:"[a-z0-9-]+"(?:\s*,\s*)?)*)\],\s*"input_params"\s*:\s*(\{\s*(?:"BucketName"\s*:\s*"([a-zA-Z0-9-]*)"\s*)?})\}$
  #   ConstraintDescription: 
  #     "Must be a valid JSON string containing: 'deploy' (true/false), 'accounts' (array of account numbers), 
  #     'regions' (array of region names), and 'input_params' object/dict (can be empty or contain 'BucketName'). Arrays can be empty. 
  #     Example: {\"deploy\": \"true\", \"accounts\": [\"123456789012\"], \"regions\": [\"us-east-1\"], \"input_params\": {}} or
  #     {\"deploy\": \"false\", \"accounts\": [], \"regions\": [], \"input_params\": {}}"
  pBedrockGuardrailsRuleParams:
    Type: String
    # TODO(liamschn): update default value  of pBedrockIAMUserAccessRuleParams prior to production
    Default: '{"deploy": "true", "accounts": ["863518454635"], "regions": ["us-east-1", "us-west-2"], "input_params": {"check_safe_content": "true", "check_responsible_ai": "true", "check_data_privacy": "true", "check_content_filtering": "true", "check_token_limit": "true"}}'
    Description: Bedrock Guardrails Config Rule Parameters
    AllowedPattern: ^\{"deploy"\s*:\s*"(true|false)",\s*"accounts"\s*:\s*\[((?:"[0-9]+"(?:\s*,\s*)?)*)\],\s*"regions"\s*:\s*\[((?:"[a-z0-9-]+"(?:\s*,\s*)?)*)\],\s*"input_params"\s*:\s*\{(\s*"check_safe_content"\s*:\s*"(true|false)")?(\s*,\s*"check_responsible_ai"\s*:\s*"(true|false)")?(\s*,\s*"check_data_privacy"\s*:\s*"(true|false)")?(\s*,\s*"check_content_filtering"\s*:\s*"(true|false)")?(\s*,\s*"check_token_limit"\s*:\s*"(true|false)")?\s*\}\}$
    ConstraintDescription: >
      Must be a valid JSON string containing: 'deploy' (true/false), 'accounts' (array of account numbers),
      'regions' (array of region names), and 'input_params' object with optional parameters:
      'check_safe_content', 'check_responsible_ai', 'check_data_privacy', 'check_content_filtering', 'check_token_limit'.
      Each parameter in 'input_params' should be either "true" or "false".
      Arrays can be empty. 
      Example: {"deploy": "true", "accounts": ["123456789012"], "regions": ["us-east-1"], "input_params": {"check_safe_content": "true", "check_responsible_ai": "false"}} or
      {"deploy": "false", "accounts": [], "regions": [], "input_params": {}}

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: SRA Solution Configuration
        Parameters:
          - pSraRepoZipUrl
          - pDryRun
          - pRuleRegionsAccounts
          - pSRASolutionName
          - pSraSolutionVersion
          - pSRAStagingS3BucketName
      - Label:
          default: IAM Roles
        Parameters:
          - pSRAExecutionRoleName
          - pBedrockOrgLambdaRoleName
      - Label:
          default: Logging Configuration
        Parameters:
          - pDeployLambdaLogGroup
          - pLogGroupRetention
          - pLambdaLogLevel
      - Label:
          default: Bedrock Model Evaluation Bucket Rule
        Parameters:
          - pBedrockModelEvalBucketRuleParams
          # - pBedrockDeployModelEvalBucketRule
          # - pBedrockModelEvalBucket
      - Label:
          default: Bedrock IAM User Access Rule
        Parameters:
          - pBedrockIAMUserAccessRuleParams
          # - pBedrockDeployIAMUserAccessRule
      - Label:
          default: Bedrock Guardrails Rule
        Parameters:
          - pBedrockGuardrailsRuleParams

    ParameterLabels:
      pSraRepoZipUrl:
        default: SRA Repo Zip URL
      pDryRun:
        default: Dry Run
      # pRuleRegionsAccounts:
      #   default: Rule Regions and Accounts
      pSRAExecutionRoleName:
        default: Stack Execution Role Name
      pDeployLambdaLogGroup:
        default: Deploy Lambda Log Group (true or false)
      pLogGroupRetention:
        default: Log Group Retention (days)
      pLambdaLogLevel:
        default: Lambda Log Level
      pSRASolutionName:
        default: SRA Solution Name
      pSraSolutionVersion:
        default: SRA Solution Version
      pSRAStagingS3BucketName:
        default: SRA Staging S3 Bucket Name
      pBedrockOrgLambdaRoleName:
        default: SRA Bedrock Org lambda role name
      # pBedrockModelEvalBucket:
      #   default: Bedrock Model Evaluation Job S3 bucket name
      # pBedrockDeployModelEvalBucketRule:
      #   default: Deploy Bedrock Model Evaluation Job Config Rule
      # pBedrockDeployIAMUserAccessRule:
      #   default: Deploy Bedrock IAM User Access Config Rule
      pBedrockModelEvalBucketRuleParams:
        default: Bedrock Model Evaluation Job Config Rule Parameters
      pBedrockIAMUserAccessRuleParams:
        default: Bedrock IAM User Access Config Rule Parameters
      pBedrockGuardrailsRuleParams:
        default: Bedrock Guardrails Config Rule Parameters

Resources:

  rBedrockOrgLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Ref pBedrockOrgLambdaRoleName
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Tags:
        - Key: sra-solution
          Value: !Ref pSRASolutionName
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        # TODO(liamschn): least privilege policies need to be created for this lambda role
        - arn:aws:iam::aws:policy/AdministratorAccess

  rBedrockOrgLambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Ref pSRASolutionName
      Runtime: python3.12
      Role: !GetAtt rBedrockOrgLambdaRole.Arn
      Handler: app.lambda_handler
      Tags:
        - Key: sra-solution
          Value: !Ref pSRASolutionName
      Code:
        S3Bucket: !Ref pSRAStagingS3BucketName
        S3Key: !Sub ${pSRASolutionName}/lambda_code/${pSRASolutionName}.zip
      Timeout: 900
      MemorySize: 512

  rBedrockOrgLambdaCustomResource:
    Type: Custom::LambdaCustomResource
    Properties:
      ServiceToken: !GetAtt rBedrockOrgLambdaFunction.Arn
      SRA_REPO_ZIP_URL: !Ref pSraRepoZipUrl
      DRY_RUN: !Ref pDryRun
      # RULE_REGIONS_ACCOUNTS: !Join [',', !Ref pRuleRegionsAccounts]
      EXECUTION_ROLE_NAME: !Ref pSRAExecutionRoleName
      LOG_GROUP_DEPLOY: !Ref pDeployLambdaLogGroup
      LOG_GROUP_RETENTION: !Ref pLogGroupRetention
      LOG_LEVEL: !Ref pLambdaLogLevel
      SOLUTION_NAME: !Ref pSRASolutionName
      SOLUTION_VERSION: !Ref pSraSolutionVersion
      # sra-bedrock-check-eval-job-bucket rule parameters
      # BEDROCK_DEPLOY_MODEL_EVAL_BUCKET_RULE: !Ref pBedrockDeployModelEvalBucketRule
      # BEDROCK_MODEL_EVAL_BUCKET: !Ref pBedrockModelEvalBucket
      # sra-bedrock-check-iam-user-access rule parameters
      # BEDROCK_DEPLOY_IAM_USER_ACCESS_RULE: !Ref pBedrockDeployIAMUserAccessRule
      SRA-BEDROCK-CHECK-EVAL-JOB-BUCKET: !Ref pBedrockModelEvalBucketRuleParams
      SRA-BEDROCK-CHECK-IAM-USER-ACCESS: !Ref pBedrockIAMUserAccessRuleParams
      SRA-BEDROCK-CHECK-GUARDRAILS: !Ref pBedrockGuardrailsRuleParams

  rBedrockOrgLambdaInvokePermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref rBedrockOrgLambdaFunction
      Action: lambda:InvokeFunction
      Principal: cloudformation.amazonaws.com
      SourceArn: !Sub 'arn:aws:cloudformation:${AWS::Region}:${AWS::AccountId}:stackSet/${AWS::StackName}/*'

Outputs:
  BedrockOrgLambdaFunctionArn:
    Description: ARN of the Lambda function
    Value: !GetAtt rBedrockOrgLambdaFunction.Arn