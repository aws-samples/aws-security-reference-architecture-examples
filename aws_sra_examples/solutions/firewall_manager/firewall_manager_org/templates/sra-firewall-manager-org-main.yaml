########################################################################
# Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
# SPDX-License-Identifier: MIT-0
########################################################################
AWSTemplateFormatVersion: 2010-09-09
Description:
  This solution enables Firewall Manager by associating a delegated administrator account, configuring a security group and WAF policy. -
  'firewall_manager_org' solution in the repo, https://github.com/aws-samples/aws-security-reference-architecture-examples (sra-1ssgnse4d)

Metadata:
  SRA:
    Version: 1.4
    Entry: Parameters for deploying solution
    Order: 1
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: General Properties
        Parameters:
          - pSRASolutionName
          - pSRASolutionVersion
          - pSRAStagingS3BucketName

      - Label:
          default: Delegate Admin Properties
        Parameters:
          - pDelegatedAdminAccountId

      - Label:
          default: Security Group Policy Properties
        Parameters:
          - pEnableRemediation
          - pInternalNetCIDR
          - pCreateVpcForSG
          - pVPCCidrBlock
          - pVpcId

      - Label:
          default: General Lambda Function Properties
        Parameters:
          - pCreateLambdaLogGroup
          - pLambdaLogGroupRetention
          - pLambdaLogGroupKmsKey
          - pLambdaLogLevel

    ParameterLabels:
      pCreateLambdaLogGroup:
        default: Create Lambda Log Group
      pCreateVpcForSG:
        default: Create VPC For Security Group
      pDelegatedAdminAccountId:
        default: Delegated Admin Account ID
      pEnableRemediation:
        default: Enable Remediation
      pInternalNetCIDR:
        default: Internal Network CIDR
      pLambdaLogGroupKmsKey:
        default: (Optional) Lambda Logs KMS Key
      pLambdaLogGroupRetention:
        default: Lambda Log Group Retention
      pLambdaLogLevel:
        default: Lambda Log Level
      pSRASolutionName:
        default: SRA Solution Name
      pSRASolutionVersion:
        default: SRA Solution Version
      pSRAStagingS3BucketName:
        default: SRA Staging S3 Bucket Name
      pVPCCidrBlock:
        default: New VPC CIDR Block
      pVpcId:
        default: (Optional) Existing VPC ID

Parameters:
  pCreateLambdaLogGroup:
    AllowedValues: ['true', 'false']
    Default: 'false'
    Description:
      Indicates whether a CloudWatch Log Group should be explicitly created for the Lambda function, to allow for setting a Log Retention and/or KMS
      Key for encryption.
    Type: String
  pCreateVpcForSG:
    AllowedValues: ['true', 'false']
    Default: 'true'
    Description: Create a new VPC for the Firewall Manager Security Groups
    Type: String
  pDelegatedAdminAccountId:
    AllowedPattern: '^\d{12}$'
    ConstraintDescription: Must be 12 digits.
    Description: AWS Account ID of the Control Tower account to delegate administration.
    Type: String
  pEnableRemediation:
    AllowedValues: [true, false]
    Default: false
    Description: Chose to enable auto-remediation on Security Groups that violate the rules in the template
    Type: String
  pInternalNetCIDR:
    AllowedPattern: ^([0-9]{1,3}\.){3}[0-9]{1,3}(\/([0-9]|[1-2][0-9]|3[0-2]))?$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
    Description:
      The CIDR block for the Internal Network (include both VPCs and On-Prem if using VPN/DirectConnet) - This is used to detect rules that don't
      align with the IP Space. Use CIDR Format. Example 192.168.1.0/24
    Type: String
  pLambdaLogGroupKmsKey:
    AllowedPattern: '^$|^arn:(aws[a-zA-Z-]*){1}:kms:[a-z0-9-]+:\d{12}:key\/[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$'
    ConstraintDescription: 'Key ARN example:  arn:aws:kms:us-east-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab'
    Default: ''
    Description:
      (Optional) KMS Key ARN to use for encrypting the Lambda logs data. If empty, encryption is enabled with CloudWatch Logs managing the server-side
      encryption keys.
    Type: String
  pLambdaLogGroupRetention:
    AllowedValues: [1, 3, 5, 7, 14, 30, 60, 90, 120, 150, 180, 365, 400, 545, 731, 1827, 3653]
    Default: 14
    Description: Specifies the number of days you want to retain log events
    Type: String
  pLambdaLogLevel:
    AllowedValues: [INFO, ERROR, DEBUG]
    Default: INFO
    Description: Lambda Function Logging Level
    Type: String
  pSRASolutionName:
    AllowedValues: [sra-firewall-manager-org]
    Default: sra-firewall-manager-org
    Description: The SRA solution name. The default value is the folder name of the solution
    Type: String
  pSRASolutionVersion:
    AllowedValues: [v1.4]
    Default: v1.4
    Description: The SRA solution version. Used to trigger updates on the nested StackSets.
    Type: String
  pSRAStagingS3BucketName:
    AllowedPattern: '^(?=^.{3,63}$)(?!.*[.-]{2})(?!.*[--]{2})(?!^(?:(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9]?[0-9])(\.(?!$)|$)){4}$)(^(([a-z0-9]|[a-z0-9][a-z0-9\-]*[a-z0-9])\.)*([a-z0-9]|[a-z0-9][a-z0-9\-]*[a-z0-9])$)'
    ConstraintDescription:
      SRA Staging S3 bucket name can include numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-).
    Description:
      SRA Staging S3 bucket name for the artifacts relevant to solution. (e.g., lambda zips, CloudFormation templates) S3 bucket name can include
      numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-).
    Type: String
  pVPCCidrBlock:
    AllowedPattern: '^$|^([0-9]{1,3}\.){3}[0-9]{1,3}(\/([0-9]|[1-2][0-9]|3[0-2]))?$'
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
    Default: 10.0.0.0/28
    Description: VPC CIDR Block to use for the new VPC. Only used if Create VPC is true.
    Type: String
  pVpcId:
    AllowedPattern: '^$|^vpc-[0-9a-f]{17}$'
    ConstraintDescription: Must have a prefix of "vpc-". Followed by 17 characters (numbers, letters "a-f")
    Default: ''
    Description: (Optional) Existing VPC ID for the Firewall Manager Security Groups. Required if Create VPC For Security Group is "false".
    Type: String

Resources:
  rFirewallManagerDisassociateIAMRoleStackSet:
    Type: AWS::CloudFormation::StackSet
    Properties:
      StackSetName: sra-firewall-manager-org-disassociate-iam-role
      AdministrationRoleARN: !Sub arn:${AWS::Partition}:iam::${AWS::AccountId}:role/service-role/AWSControlTowerStackSetRole
      CallAs: SELF
      Capabilities:
        - CAPABILITY_NAMED_IAM
      Description: !Sub ${pSRASolutionVersion} - Deploys an IAM role via ${pSRASolutionName}
      ExecutionRoleName: AWSControlTowerExecution
      ManagedExecution:
        Active: true
      OperationPreferences:
        FailureTolerancePercentage: 0
        MaxConcurrentPercentage: 100
        RegionConcurrencyType: PARALLEL
      PermissionModel: SELF_MANAGED
      StackInstancesGroup:
        - DeploymentTargets:
            Accounts:
              - !Ref pDelegatedAdminAccountId
          Regions:
            - !Ref AWS::Region
      TemplateURL: !Sub https://${pSRAStagingS3BucketName}.s3.${AWS::Region}.${AWS::URLSuffix}/${pSRASolutionName}/templates/sra-firewall-manager-org-disassociate-iam-role.yaml
      Parameters:
        - ParameterKey: pManagementAccountId
          ParameterValue: !Ref AWS::AccountId
      Tags:
        - Key: sra-solution
          Value: !Ref pSRASolutionName

  rFirewallManagerDelegateAdminStack:
    Type: AWS::CloudFormation::Stack
    DeletionPolicy: Delete
    DependsOn: rFirewallManagerDisassociateIAMRoleStackSet
    UpdateReplacePolicy: Delete
    Properties:
      TemplateURL: !Sub https://${pSRAStagingS3BucketName}.s3.${AWS::Region}.${AWS::URLSuffix}/${pSRASolutionName}/templates/sra-firewall-manager-org-delegate-admin.yaml
      Tags:
        - Key: sra-solution
          Value: !Ref pSRASolutionName
      Parameters:
        pCreateLambdaLogGroup: !Ref pCreateLambdaLogGroup
        pDelegatedAdminAccountId: !Ref pDelegatedAdminAccountId
        pLambdaLogGroupKmsKey: !Ref pLambdaLogGroupKmsKey
        pLambdaLogGroupRetention: !Ref pLambdaLogGroupRetention
        pLambdaLogLevel: !Ref pLambdaLogLevel
        pSRAStagingS3BucketName: !Ref pSRAStagingS3BucketName

  rFirewallManagerSGPolicyStackSet:
    DependsOn: rFirewallManagerDelegateAdminStack
    Type: AWS::CloudFormation::StackSet
    Properties:
      StackSetName: sra-firewall-manager-org-sg-policy
      AdministrationRoleARN: !Sub arn:${AWS::Partition}:iam::${AWS::AccountId}:role/service-role/AWSControlTowerStackSetRole
      CallAs: SELF
      Description: !Sub ${pSRASolutionVersion} - Deploys a security group policy via ${pSRASolutionName}
      ExecutionRoleName: AWSControlTowerExecution
      ManagedExecution:
        Active: true
      OperationPreferences:
        FailureTolerancePercentage: 0
        MaxConcurrentPercentage: 100
        RegionConcurrencyType: PARALLEL
      PermissionModel: SELF_MANAGED
      StackInstancesGroup:
        - DeploymentTargets:
            Accounts:
              - !Ref pDelegatedAdminAccountId
          Regions:
            - !Ref AWS::Region
      TemplateURL: !Sub https://${pSRAStagingS3BucketName}.s3.${AWS::Region}.${AWS::URLSuffix}/${pSRASolutionName}/templates/sra-firewall-manager-org-sg-policy.yaml
      Parameters:
        - ParameterKey: pCreateVpcForSG
          ParameterValue: !Ref pCreateVpcForSG
        - ParameterKey: pEnableRemediation
          ParameterValue: !Ref pEnableRemediation
        - ParameterKey: pInternalNetCIDR
          ParameterValue: !Ref pInternalNetCIDR
        - ParameterKey: pVPCCidrBlock
          ParameterValue: !Ref pVPCCidrBlock
        - ParameterKey: pVpcId
          ParameterValue: !Ref pVpcId
      Tags:
        - Key: sra-solution
          Value: !Ref pSRASolutionName

  rFirewallManagerWAFPolicyStackSet:
    DependsOn: rFirewallManagerDelegateAdminStack
    Type: AWS::CloudFormation::StackSet
    Properties:
      StackSetName: sra-firewall-manager-org-waf-policy
      AdministrationRoleARN: !Sub arn:${AWS::Partition}:iam::${AWS::AccountId}:role/service-role/AWSControlTowerStackSetRole
      CallAs: SELF
      Description: !Sub ${pSRASolutionVersion} - Deploys a WAF policy via ${pSRASolutionName}
      ExecutionRoleName: AWSControlTowerExecution
      ManagedExecution:
        Active: true
      OperationPreferences:
        FailureTolerancePercentage: 0
        MaxConcurrentPercentage: 100
        RegionConcurrencyType: PARALLEL
      PermissionModel: SELF_MANAGED
      StackInstancesGroup:
        - DeploymentTargets:
            Accounts:
              - !Ref pDelegatedAdminAccountId
          Regions:
            - us-east-1
      TemplateURL: !Sub https://${pSRAStagingS3BucketName}.s3.${AWS::Region}.${AWS::URLSuffix}/${pSRASolutionName}/templates/sra-firewall-manager-org-waf-policy.yaml
      Tags:
        - Key: sra-solution
          Value: !Ref pSRASolutionName
